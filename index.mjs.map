{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable stdlib/jsdoc-doctest-decimal-point */\n\n'use strict';\n\n// MODULES //\n\nimport format from '@stdlib/string-format';\nimport INT8 from '@stdlib/constants-int8-max';\nimport UINT8 from '@stdlib/constants-uint8-max';\nimport INT16 from '@stdlib/constants-int16-max';\nimport UINT16 from '@stdlib/constants-uint16-max';\nimport INT32 from '@stdlib/constants-int32-max';\nimport UINT32 from '@stdlib/constants-uint32-max';\nimport FLOAT16 from '@stdlib/constants-float16-pinf';\nimport FLOAT32 from '@stdlib/constants-float32-pinf';\nimport FLOAT64 from '@stdlib/constants-float64-pinf';\n\n\n// MAIN //\n\n/**\n* Returns the maximum value of a specified numeric type.\n*\n* @param {string} dtype - numeric type\n* @throws {TypeError} must provide a recognized numeric type\n* @returns {number} maximum value\n*\n* @example\n* var m = typemax( 'int8' );\n* // returns 127\n*\n* @example\n* var m = typemax( 'uint8' );\n* // returns 255\n*\n* @example\n* var m = typemax( 'int16' );\n* // returns 32767\n*/\nfunction typemax( dtype ) {\n\tswitch ( dtype ) {\n\tcase 'float64':\n\t\treturn FLOAT64;\n\tcase 'int32':\n\t\treturn INT32;\n\tcase 'uint32':\n\t\treturn UINT32;\n\tcase 'float32':\n\t\treturn FLOAT32;\n\tcase 'int8':\n\t\treturn INT8;\n\tcase 'uint8':\n\t\t// Fall-through...\n\tcase 'uint8c': // eslint-disable-line no-fallthrough\n\t\treturn UINT8;\n\tcase 'int16':\n\t\treturn INT16;\n\tcase 'uint16':\n\t\treturn UINT16;\n\tcase 'float16':\n\t\treturn FLOAT16;\n\tdefault:\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a recognized type. Value: `%s`.', dtype ) );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default typemax;\n"],"names":["typemax","dtype","FLOAT64","INT32","UINT32","FLOAT32","INT8","UINT8","INT16","UINT16","FLOAT16","TypeError","format"],"mappings":";;g7BAyDA,SAASA,EAASC,GACjB,OAASA,GACT,IAAK,UACJ,OAAOC,EACR,IAAK,QACJ,OAAOC,EACR,IAAK,SACJ,OAAOC,EACR,IAAK,UACJ,OAAOC,EACR,IAAK,OACJ,OAAOC,EACR,IAAK,QAEL,IAAK,SACJ,OAAOC,EACR,IAAK,QACJ,OAAOC,EACR,IAAK,SACJ,OAAOC,EACR,IAAK,UACJ,OAAOC,EACR,QACC,MAAM,IAAIC,UAAWC,EAAQ,iEAAkEX,IAEjG"}